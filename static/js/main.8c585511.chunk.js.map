{"version":3,"sources":["utils.js","components/Note/index.js","components/TagChip/index.js","assets/images/logo.png","components/NoteEditor/index.js","App.js","index.js"],"names":["uuid","require","filterByTags","notes","tag","filter","n","tags","includes","removeDuplicate","list","item","index","indexOf","Note","text","length","note","onEdit","className","onClick","slice","concat","map","t","TagChip","name","onDelete","tagClassName","NoteEditor","onSave","onCancel","open","placeholder","maxLength","value","title","onChange","e","target","containerClassName","body","highlight","App","useState","data","setNotes","setTags","editingNote","setEditingNote","isEditorOpen","setIsEditorOpen","selectedTag","setSelectedTag","src","logo","alt","id","type","newTaglist","onDeleteTag","noteIndex","findIndex","newSet","newTags","match","toLowerCase","extractTagsFromText","taglist","push","updateTaglist","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c585511.chunk.js","sourcesContent":["const writeJsonFile = require('write-json-file');\nconst uuid = require('uuid-random');\n \n\nexport const saveData =  (tags, notes) => {\n    return writeJsonFile('db.json', {notes, tags});\n}\n\nexport const filterByTags = (notes, tag) => {\n    if(tag){\n        return notes.filter(n => n.tags?.includes(tag))\n    }\n    return notes\n} \n\nexport const truncateText = (text, length) => {\n    return text.length < length ? text : text.slice(0, length - 1).concat(\" ...\")\n}\n\nexport const getNoteTemplate = () => ({\n    id: uuid(), \n    title: \"\",\n    body: \"\",\n    tags: []\n  })\n\nexport const extractTagsFromText = text => {\n    let tags = text.match(/#[a-zA-Zа-яА-Я0-9_]+/g)\n    return tags?.map(tag => tag.slice(1).toLowerCase())\n  }\n\nexport const removeDuplicate = list => {\n    let uniqueValues = list?.filter((item, index) => list.indexOf(item) === index)\n    return uniqueValues\n}","import React from 'react'\nimport { truncateText } from '../../utils'\n\nconst Note = ({note, onEdit}) => {\n    const MAX_LENGTH = 300\n    return(\n        <div className=\"note-container\" onClick={onEdit}>\n              <h4 className=\"note-title\">{note[\"title\"]}</h4>\n              <p className=\"note-body\">\n                  {truncateText(note[\"body\"], MAX_LENGTH)}\n              </p>\n              <ul className=\"note-tags\">\n                    {note?.tags?.slice(0, 6).map(t => <li key={t} className=\"tag\">{t}</li>)}\n             </ul>\n        </div>\n    )\n}\n\nexport default Note","import React from 'react'\n\nconst TagChip = ({name, onClick, onDelete, tagClassName}) => {\n\n    return(\n        <li className={ \"tag-chip \" + tagClassName }>\n            <span className=\"chip-text\" onClick={onClick}>{name}</span>\n            <button className=\"delete-btn\" onClick={onDelete}></button>\n        </li>\n    )\n}\n\nexport default TagChip","export default __webpack_public_path__ + \"static/media/logo.be04748a.png\";","import React from 'react'\nimport { HighlightWithinTextarea } from 'react-highlight-within-textarea'\nimport TagChip from '../TagChip'\n\n\nconst NoteEditor = ({onSave, onCancel, onDelete, open, note, onEdit}) => {\n\n    if(!open){\n        return null\n    }\n\n    return(\n        <div className=\"overlay\">\n            <div className=\"modal\">\n                <button className=\"close-btn\" onClick={onCancel}></button>\n                <div className=\"edit-form\">\n                    <input \n                        className=\"note-title-input\" \n                        placeholder=\"Title\"  \n                        maxLength=\"50\" \n                        value={note?.title} \n                        onChange={e => onEdit(note => ({...note, title: e.target.value}))}\n                        />\n\n                    <HighlightWithinTextarea\n                        className=\"body-textarea\" \n                        containerClassName=\"body-container\" \n                        \n                        placeholder=\"Start typing here...\" \n                        value={note?.body} \n                        onChange={e => {\n                            onEdit(note => ({...note, body: e.target.value}))\n                                }\n                            }\n                        highlight={note.tags|| \"\"}\n                    />\n\n    \n                    <ul className=\"editor-taglist\">\n                            {note?.tags?.map(t => <TagChip \n                                    key={t}\n                                    tagClassName=\"note-tag\" \n                                    name={t}\n                                    onDelete={() => onEdit(note => ({...note, tags: note.tags.filter(tag => tag !== t)}))}\n                                    />)}\n                    </ul>\n                </div>\n                <div className=\"modal-actions\">\n                    <button className=\"modal-action-btn\" onClick={onSave}>Save</button>\n                    <button className=\"modal-action-btn\" onClick={onDelete}>Delete</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default NoteEditor","import Note from \"./components/Note\"\nimport TagChip from \"./components/TagChip\"\nimport logo  from \"./assets/images/logo.png\"\nimport data from \"./data.json\"\nimport NoteEditor from \"./components/NoteEditor\"\nimport { useState } from \"react\"\nimport { extractTagsFromText, filterByTags, getNoteTemplate, removeDuplicate } from \"./utils\"\n\n\nconst App = () => {\n  const [notes, setNotes] = useState(data[\"notes\"])\n  const [tags, setTags] = useState(data[\"tags\"])\n  const [editingNote, setEditingNote] = useState(null)\n  const [isEditorOpen, setIsEditorOpen] = useState(false)\n  const [selectedTag, setSelectedTag] = useState(null)\n\n  const onEdit = (id) => {\n    let noteIndex = notes.findIndex(note => note.id === id)\n    setEditingNote(notes[noteIndex])\n    setIsEditorOpen(true)\n  }\n\n  const onDelete = () => {\n    let newSet = notes.filter(note => note.id !== editingNote.id)\n    setIsEditorOpen(false)\n    setEditingNote(null)\n    setNotes(newSet)\n  }\n\n  const onCancel = () => {\n    setIsEditorOpen(false)\n    setEditingNote(null)\n  }\n\n  const onDeleteTag = (tag) => {\n    let newTaglist = tags.filter(t => t!== tag)\n    setTags(newTaglist)\n    setNotes(notes.map(note => ({...note, tags: note.tags.filter(t => t!== tag)})))\n  }\n\n  const updateTaglist = (newTags) => {\n    if(newTags){\n      setTags(tags => removeDuplicate([...tags, ...newTags]))\n    }\n  }\n\n  const onSave = () => {\n    let index = notes.findIndex(note => note.id === editingNote.id)\n    let newSet = [...notes]\n    let newTags = extractTagsFromText(editingNote.body) || []\n    let taglist = removeDuplicate([...editingNote.tags, ...newTags])\n\n    if(index !== -1){\n      newSet[index] = {...editingNote, tags: taglist}\n    }else{\n      newSet.push({...editingNote, tags: taglist})\n    }\n    \n    updateTaglist(newTags)\n    setNotes(newSet)\n    setIsEditorOpen(false)\n  }\n\n  const createNote = () => {\n    setEditingNote(getNoteTemplate())\n    setIsEditorOpen(true)\n  }\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <div className=\"app-logo\">\n          <img src={logo} alt=\"logo\"/>\n        </div>\n        <button className=\"new-note-btn\" onClick={createNote}>+ New note</button>\n      </header>\n      <section className=\"notes-section\">\n          <ul className=\"taglist\">\n            <input className=\"chip-btn\" type=\"button\" value=\"Show all\" onClick={() => {setSelectedTag(null)}}/>\n            {tags?.map(tag =>  \n                <TagChip \n                    key={tag} \n                    name={tag} \n                    onClick={() => setSelectedTag(tag)} \n                    onDelete={() => onDeleteTag(tag)}\n                    tagClassName={tag === selectedTag ? \"filter-tag selected\" : \"filter-tag\" }\n                    />\n            )}\n            </ul>\n        <div className=\"notes-list\">\n          {\n            filterByTags(notes, selectedTag)?.map(\n              note => <Note \n                        key={note.id} \n                        note={note} \n                        onEdit={() => onEdit(note.id)}\n                        />)\n          }\n        </div>\n      </section>\n\n      <NoteEditor \n        open={isEditorOpen} \n        note={editingNote} \n        onCancel={onCancel} \n        onSave={onSave} \n        onDelete={onDelete}\n        onEdit={setEditingNote}\n        />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}